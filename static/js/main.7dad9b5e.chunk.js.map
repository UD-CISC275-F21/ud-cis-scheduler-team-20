{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","columns","headerName","field","sortable","editable","cellRendererFramework","params","InputGroup","className","Checkbox","FormControl","onClick","actionButton","useState","show","setshow","show1","setShow1","id","Course","Credit","Name","Plan","newData","setNewData","rowDataIndex","setRowDataIndex","rowIndex","setRowIndex","console","log","data","forEach","value","index","rowData","value1","index1","newIndex","JSON","parse","stringify","newIndex1","newData2","splice","tmpNewData","push","addAsemester","map","style","height","width","columnDefs","newCourse","addArow","Alert","variant","Heading","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dad9b5e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {AgGridReact} from \"ag-grid-react\";\r\nimport {Alert, Button, FormControl} from \"react-bootstrap\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\n\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst App = () => {   \r\n    \r\n\r\n    const columns = [\r\n        {\r\n            headerName:\"course\",field:\"Course\",sortable:true,\r\n        },\r\n        {\r\n            headerName:\"credit\",field:\"Credit\",sortable:true,\r\n        },\r\n        {\r\n            headerName:\"name\",field:\"Name\",sortable:true,editable:true,\r\n        },\r\n        {\r\n            headerName:\"plan\",field:\"Plan\",sortable:true,editable:true,\r\n        },\r\n        {\r\n            headerName:\"degree requirement\",\r\n            field:\"DR\",\r\n            cellRendererFramework: (params: { data: { [x: string]: unknown; id?: number | undefined; Course?: string | undefined; Credit?: string | undefined; Name?: string | undefined; Plan?: string | undefined; Course2?: string | undefined; }; }) =>\r\n                <div>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n                        <FormControl aria-label=\"Text input with checkbox\" />\r\n                    </InputGroup>\r\n                    <button onClick={()=>actionButton(params)}>Delete</button>\r\n                </div>,\r\n        },\r\n        {\r\n            headerName:\"action\",\r\n            field:\"Action\",\r\n            cellRendererFramework: (params: { data: { [x: string]: unknown; id?: number | undefined; Course?: string | undefined; Credit?: string | undefined; Name?: string | undefined; Plan?: string | undefined; Course2?: string | undefined; }; }) =>\r\n                <div>\r\n                    <button onClick={()=>actionButton(params)}>Delete</button>\r\n                </div>,\r\n        },\r\n    ];\r\n\r\n    const [show,setshow] = useState(true);\r\n    \r\n    const [show1, setShow1] = useState(true);\r\n\r\n    const [newData,setNewData] = useState([\r\n        {\r\n            \"rowData\":[\r\n                {id:0,Course: \"EGGG101\", Credit: \"2\",Name:\"engineer101\",Plan:\"Take Care\"},\r\n                {id:0,Course: \"CISC108\", Credit: \"3\",Name:\"Computer Science108\",Plan:\"Take Care\"},\r\n                {id:0,Course: \"MATH241\", Credit: \"4\",Name:\"Mathematic241\",Plan:\"Take Care\"},\r\n                {id:0,Course: \"ENGL101\", Credit: \"3\",Name:\"engineer101\",Plan:\"Take Care\"},\r\n                {id:0,Course: \"BRE\", Credit: \"3\",Name:\"Breath\",Plan:\"Take Care\"},\r\n            ], \r\n        },\r\n        {\r\n            \"rowData\":[\r\n                {id:1,Course: \"EGGG102\", Credit: \"2\",Name:\"engineer102\",Plan:\"Take Care\"},\r\n                {id:1,Course: \"CISC109\", Credit: \"3\",Name:\"Computer Science109\",Plan:\"Take Care\"},\r\n                {id:1,Course: \"MATH242\", Credit: \"4\",Name:\"Mathematic242\",Plan:\"Take Care\"},\r\n                {id:1,Course: \"ENGL102\", Credit: \"3\",Name:\"engineer102\",Plan:\"Take Care\"},\r\n                {id:1,Course: \"BRE1\", Credit: \"3\",Name:\"Breath2\",Plan:\"Take Care\"},\r\n            ]\r\n        }\r\n    ]);\r\n\r\n    const [rowDataIndex,setRowDataIndex] = useState(0);\r\n    const [rowIndex,setRowIndex] = useState(0);\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const actionButton = (params:any)=>{\r\n        console.log(params.data);\r\n        newData.forEach((value,index)=>{\r\n            console.log(value);\r\n            value.rowData.forEach((value1,index1)=>{\r\n                if (value1 == params.data){\r\n                    const newIndex = JSON.parse(JSON.stringify(index));\r\n                    const newIndex1 = JSON.parse(JSON.stringify(index1));\r\n                    setRowDataIndex(newIndex);\r\n                    setRowIndex(newIndex1);\r\n                }\r\n            });\r\n        });\r\n        const newData2 = JSON.parse(JSON.stringify(newData));\r\n        \r\n        newData2[rowDataIndex][\"rowData\"].splice(rowIndex,1);\r\n        setNewData(newData2);\r\n        console.log(rowDataIndex);\r\n        console.log(rowIndex);\r\n    };\r\n\r\n    const addArow = (index: number) => {\r\n        const newCourse = {id:index,Course: \"\", Credit: \"\",Name:\"\",Plan:\"\"};\r\n        console.log(newCourse);\r\n        const tmpNewData = JSON.parse(JSON.stringify(newData));\r\n        tmpNewData[index].rowData.push(newCourse);\r\n        console.log(tmpNewData[index]);\r\n        setNewData(tmpNewData);\r\n        \r\n    };\r\n\r\n    const addAsemester = () =>{\r\n        const tmpNewData = JSON.parse(JSON.stringify(newData));\r\n        const newSemester = {rowData:[]};\r\n        tmpNewData.push(newSemester);\r\n        setNewData(tmpNewData);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <button onClick={()=>setshow(false)}>Clear All Semester</button> <button onClick={()=>setshow(true)}>Show All Semester</button>\r\n                <button onClick = {() => addAsemester()}>add newSemester</button>\r\n                {\r\n                    show?\r\n                        newData.map((value,index) => \r\n                            <div key = {index}>\r\n                             \r\n                                <div className=\"ag-theme-alpine\" style={{height: 400, width: 1000}}>\r\n                                 \r\n                                    <AgGridReact rowData={value.rowData} columnDefs={columns}/>\r\n                                 \r\n                                </div>\r\n                             \r\n                                <button onClick = {()=>addArow(index)}>addRow</button>\r\n                            </div>\r\n                        )\r\n                        :null\r\n                \r\n                }\r\n            </div>\r\n            <>\r\n                <Alert show={show1} variant=\"success\">\r\n                    <Alert.Heading>Hello There!</Alert.Heading>\r\n                    <p>\r\n                        Thank you for using our website. The current version is the default semester plan, and you can graduate in 4 academic years if things go well. \r\n                        If it is different from the actual situation, you need to edit it manually. This site currently offers adding course semester and deletion functionality.\r\n                    </p>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button onClick={() => setShow1(false)} variant=\"outline-success\">\r\n                            Got!\r\n                        </Button>\r\n                    </div>\r\n                </Alert>\r\n                {!show && <Button onClick={() => setShow1(true)}>Show Alert</Button>}\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}