{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","id","Course","Credit","Name","Plan","DegreeRequire","Presuit","newData","setNewData","courses","setCourses","name","value","nowValue","DegreeRequires","setDegreeRequires","totalCredit","setTotalCredit","show","setshow","useEffect","document","body","addEventListener","e","flag","target","parentDiv","className","indexOf","closest","key","dataset","DropObjIndex","nowDragData","arr","JSON","parse","stringify","parseData","alert","i","rowData","length","push","flag2","j","item","totalCredit2","DegreeRequires2","columns","headerName","field","sortable","editable","rowDrag","cellEditor","cellEditorParams","values","cellRendererFramework","params","onClick","actionButton","columns2","width","data","console","log","indexNumber","abc","getIndex","index1","index","newData2","splice","newData3","show1","setShow1","DragStarted","gridApi","setGridApi","onGridReady","api","style","textAlign","marginLeft","map","height","onDragStarted","suppressExcelExport","columnDefs","rowDragManaged","animateRows","suppressMoveWhenRowDragging","exportDataAsCsv","onBtnExport","newCourse","tmpNewData","addArow","clearAllCourse","addAsemester","Jsondata","localStorage","setItem","getItem","saveData","loadData","JsonData","type","accept","onChange","files","file","fr","FileReader","readAsBinaryString","onload","result","Papa","encoding","complete","data2","obj2","Alert","variant","Heading","href","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edbf75cd.chunk.js","sourcesContent":["import React, { useState, useEffect, ChangeEvent} from \"react\";\r\n// import type { MouseEvent } from \"react\";\r\nimport \"ag-grid-enterprise\";\r\nimport {AgGridReact} from \"ag-grid-react\";\r\nimport {GridReadyEvent, GridApi, DragStartedEvent} from \"ag-grid-community\";\r\nimport { Alert, Button} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport Papa from \"papaparse\";\r\n\r\n\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst App = () => {\r\n\r\n    const [newData,setNewData] = useState([\r\n        {\r\n            \"rowData\":[\r\n                {id:0,Course: \"CISC 108\", Credit: \"3\",Name:\"Introduction to Computer Science 1\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"\"},\r\n            // {id:0,Course: \"EGGG101\", Credit: \"2\",Name:\"engineer101\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"UNIV\"},\r\n            // {id:1,Course: \"CISC108\", Credit: \"3\",Name:\"Computer Science108\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC100\"},\r\n            // {id:2,Course: \"MATH241\", Credit: \"4\",Name:\"Mathematic241\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"LAB\"},\r\n            // {id:3,Course: \"ENGL101\", Credit: \"3\",Name:\"engineer101\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"UNIV\"},\r\n            // {id:4,Course: \"BRE\", Credit: \"3\",Name:\"Breath\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"BRE\"},\r\n            ], \r\n        },\r\n   \r\n    ]);\r\n    \r\n    const [newDataType] = useState([{\r\n        \"rowData\":[\r\n            {id:0,Course: \"CISC 108\", Credit: \"3\",Name:\"Introduction to Computer Science 1\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"\"},\r\n        ], \r\n    }]);\r\n\r\n    const [courses, setCourses] = useState([\r\n        {\r\n            \"rowData\":[\r\n                {id:0,Course: \"CISC 108\", Credit: \"3\",Name:\"Introduction to Computer Science 1\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"\"},\r\n                {id:1,Course: \"CISC 210\", Credit: \"3\",Name:\"Introduction to Computer Science 2\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 108\"},\r\n                {id:2,Course: \"CISC 220\", Credit: \"3\",Name:\"Data Sctructures\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 210\"},\r\n                {id:3,Course: \"CISC 260\", Credit: \"3\",Name:\"Machine organization and Assembly Language\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 220\"},\r\n                {id:4,Course: \"CISC 275\", Credit: \"3\",Name:\"Introduction to Software Engineering\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 260\"},\r\n                {id:5,Course: \"CISC 303\", Credit: \"3\",Name:\"Automata Theory\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 275\"},\r\n                {id:6,Course: \"CISC 320\", Credit: \"3\",Name:\"Introduction to Algorithms\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 303\"},\r\n                {id:7,Course: \"CISC 361\", Credit: \"3\",Name:\"Operating Systems\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 320\"},\r\n                {id:8,Course: \"CISC 372\", Credit: \"3\",Name:\"Parallel Computing\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 361\"},\r\n                {id:9,Course: \"CISC 475\", Credit: \"3\",Name:\"Advanced Software Engineering\",Plan:\"Take Care\",DegreeRequire:\"CISC\",Presuit:\"CISC 372\"},\r\n                {id:10,Course: \"MATH 205\", Credit: \"4\",Name:\"Statistical Mathods\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"\"},\r\n                {id:11,Course: \"MATH 210\", Credit: \"3\",Name:\"Discrete Mathematics 1\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"MATH 205\"},\r\n                {id:12,Course: \"MATH 350\", Credit: \"3\",Name:\"Probability Theory and Simulation Methods\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"MATH 210\"},\r\n                {id:13,Course: \"MATH 241\", Credit: \"4\",Name:\"Analytic Geometry and Calculus A\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"MATH 350\"},\r\n                {id:14,Course: \"MATH 242\", Credit: \"4\",Name:\"Analytic Geometry and Calculus B\",Plan:\"Take Care\",DegreeRequire:\"Other\",Presuit:\"MATH 241\"},\r\n\r\n\r\n            ], \r\n        }\r\n       \r\n    ]);\r\n    \r\n    const [DegreeRequires,setDegreeRequires] = useState([{\r\n        name: \"CISC\",\r\n        value: 10,\r\n        nowValue: 1\r\n    },{\r\n        name: \"Other\",\r\n        value: 5,\r\n        nowValue: 0\r\n    }]);\r\n    \r\n\r\n    const [totalCredit, setTotalCredit] = useState(3);\r\n    \r\n    const [show,setshow] = useState(false);\r\n \r\n    useEffect(()=>{\r\n        // console.log(\"in useeffect\",newData);\r\n        setNewData(newData);\r\n        document.body.addEventListener(\"mouseup\", function(e){\r\n            // console.log(e, flag, 11);\r\n            if(!flag) return;\r\n            if(e.target) {\r\n                const target: HTMLDivElement= e.target as HTMLDivElement;\r\n                const parentDiv = target.className.indexOf(\"my-table\") != -1 ? target : target.closest(\"div.my-table\") as HTMLDivElement;\r\n                const key = parentDiv ? parentDiv.dataset.key : \"\";\r\n                // console.log(key, \"key\", parentDiv);\r\n                DropObjIndex = key!==\"\" && key !== null ? key as never : -1;\r\n                // console.log(flag, key, \"key\", DropObjIndex, nowDragData);\r\n                if(flag && DropObjIndex!=-1 && nowDragData && nowDragData.id!==\"\"&& nowDragData.id!==null){\r\n                    flag = false;\r\n                    if(DropObjIndex==-2) {\r\n                        const arr = JSON.parse(JSON.stringify(courses));\r\n                        // arr[0].rowData.push(JSON.parse(JSON.stringify(nowDragData)));\r\n                        // setCourses(arr);\r\n\r\n                        const parseData = JSON.parse(JSON.stringify(nowDragData));\r\n                        // let flag2 = false;\r\n                        if(!parseData.Course) {\r\n                            alert(\"Course cannot null\");\r\n                            DropObjIndex = -1;\r\n                            nowDragData = {} as Element;\r\n                            return;\r\n                        }\r\n\r\n                        for(let i = 0; i< arr[0].rowData.length ;i++) {\r\n                            const item = arr[0].rowData[i];\r\n                            // console.log(item.Course == parseData.Course, item.Course , parseData.Course);\r\n                            if(item.Course == parseData.Course) {\r\n                                alert(\"The course already exists\");\r\n                                DropObjIndex = -1;\r\n                                nowDragData = {} as Element;\r\n                                return;\r\n                            }\r\n                            // if(parseData.Presuit && item.Course == parseData.Presuit) {\r\n                            //     // console.log(parseData.Presuit, 888);\r\n                            //     flag2 = true;\r\n                            // }\r\n                        }\r\n                        arr[0].rowData.push(JSON.parse(JSON.stringify(nowDragData)));\r\n                        setCourses(arr);\r\n                        // if(!parseData.Presuit || flag2) {\r\n                        //     arr[0].rowData.push(JSON.parse(JSON.stringify(nowDragData)));\r\n                        // }else {\r\n                        //     alert(\"Did not complete the required courses for this class\");\r\n                        // }\r\n                    }else{\r\n                        const arr = JSON.parse(JSON.stringify(newData));\r\n                        // console.log(DropObjIndex, arr[DropObjIndex], 888);\r\n                        if(arr[DropObjIndex]) {\r\n                            const parseData = JSON.parse(JSON.stringify(nowDragData));\r\n                            let flag2 = false;\r\n                            for(let j = 0; j< arr.length; j++) {\r\n                                for(let i = 0; i< arr[j].rowData.length ;i++) {\r\n                                    const item = JSON.parse(JSON.stringify(arr[j].rowData[i]));\r\n                                    if(parseData.Course && item.Course == parseData.Course) {\r\n                                        alert(\"The course already exists\");\r\n                                        DropObjIndex = -1;\r\n                                        nowDragData = {} as Element;\r\n                                        return;\r\n                                    }\r\n                                    if(parseData.Presuit && item.Course == parseData.Presuit) {\r\n                                        flag2 = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if(!parseData.Presuit || flag2) {\r\n                                arr[DropObjIndex].rowData.push(parseData);\r\n                                setNewData(arr);\r\n                                const totalCredit2 = totalCredit + parseData.Credit * 1;\r\n                                // console.log(totalCredit, parseData, 888);\r\n                                setTotalCredit(totalCredit2);\r\n                                const DegreeRequires2 = JSON.parse(JSON.stringify(DegreeRequires));\r\n                                // console.log(DegreeRequires2, parseData.DegreeRequire, parseData);\r\n                                for(let j = 0 ; j < DegreeRequires2.length ; j++) {\r\n                                    // console.log(parseData.DegreeRequire === DegreeRequires2[j].name, parseData.DegreeRequire , DegreeRequires2[j].name);\r\n                                    if(parseData.DegreeRequire === DegreeRequires2[j].name){\r\n                                        DegreeRequires2[j].nowValue = DegreeRequires2[j].nowValue + 1;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                // console.log(DegreeRequires2, 889);\r\n                                setDegreeRequires(DegreeRequires2);\r\n                                // console.log(arr[DropObjIndex], DropObjIndex, parseData);\r\n                            }else {\r\n                                alert(\"Did not complete the required courses for this class\");\r\n                            }\r\n                        }\r\n                        // setNewData(JSON.parse(JSON.stringify(arr)));\r\n                        // console.log(newData, arr, 9990);\r\n                    }\r\n                    DropObjIndex = -1;\r\n                    nowDragData = {} as Element;\r\n                }\r\n            }\r\n        });\r\n    });\r\n    \r\n    const columns = [\r\n        {\r\n            headerName:\"course\",field:\"Course\",sortable:true,editable:true, rowDrag:true\r\n        },\r\n        {\r\n            headerName:\"credit\",field:\"Credit\",sortable:true,editable:true,\r\n        },\r\n        {\r\n            headerName:\"name\",field:\"Name\",sortable:true,editable:true,\r\n        },\r\n        {\r\n            headerName:\"plan\",field:\"Plan\",sortable:true,editable:true,\r\n        },\r\n        {\r\n            field: \"DegreeRequire\",\r\n            editable:true,\r\n            cellEditor: \"agRichSelectCellEditor\",\r\n            cellEditorParams: {\r\n                values: [\"CISC\", \"Other\"],\r\n            },\r\n        },\r\n        {\r\n            field: \"Presuit\",\r\n            editable:true,\r\n            cellEditor: \"agRichSelectCellEditor\",\r\n        },\r\n        {\r\n            headerName:\"action\",\r\n            field:\"Action\",\r\n            cellRendererFramework: (params: { data: { id: number; Course: string; Credit: string; Name: string; Plan: string; }; }) =><div>\r\n                <button onClick={()=>actionButton(params)}>Delete</button>\r\n            </div>,    \r\n        },\r\n    ];\r\n    \r\n    const columns2 = [\r\n        {\r\n            headerName:\"\",field:\"\",sortable:true,editable:true, rowDrag:true, width: 40\r\n        },\r\n        {\r\n            headerName:\"pool of courses\",\r\n            field:\"pool of courses\",\r\n            width: 300,\r\n            cellRendererFramework: (params: { data: { id: number; Course: string; Credit: string; Name: string; Plan: string; }; }) =><div>\r\n                {params.data.Course}-{params.data.Name}({params.data.Credit}cr)\r\n            </div>,    \r\n        },\r\n    ];\r\n\r\n    function getIndex(abc:typeof newDataType,params: { data: { id: number; Course: string; Credit: string; Name: string; Plan: string; }; }){\r\n        for (let i=0;i<abc.length;i++){\r\n            for(let j = 0;j<abc[i].rowData.length;j++){\r\n                if (abc[i].rowData[j].id==params.data.id){\r\n                    return [i,j] ;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const actionButton = (params: { data: { id: number; Course: string; Credit: string; Name: string; Plan: string; }; })=>{\r\n        console.log(newData);\r\n        const indexNumber = getIndex(newData,params) as number[] ;\r\n        console.log(indexNumber);\r\n        console.log(\"before\",newData);\r\n        const index1 = indexNumber[0];\r\n        const index = indexNumber[1];\r\n        console.log(index1);\r\n        if (indexNumber != null){\r\n            const newData2 :typeof newDataType= JSON.parse(JSON.stringify(newData));\r\n            newData2[index1].rowData.splice(index,1);\r\n            try{\r\n                setNewData(newData2);\r\n                console.log(\"after\",newData);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n            const newData3 :typeof newDataType= JSON.parse(JSON.stringify(newData));\r\n            console.log(\"data3\",newData3);\r\n        }       \r\n    };\r\n\r\n    const addArow = (index: number) => {\r\n        const newCourse = {id:courses.length,Course: \"\", Credit: \"\",Name:\"\",Plan:\"\"};\r\n        console.log(newCourse);\r\n        const tmpNewData = JSON.parse(JSON.stringify(newData));\r\n        tmpNewData[index].rowData.push(newCourse);\r\n        console.log(tmpNewData[index]);\r\n        setNewData(tmpNewData);\r\n        \r\n    };\r\n\r\n    const addAsemester = () =>{\r\n        const tmpNewData = JSON.parse(JSON.stringify(newData));\r\n        const newSemester = {rowData:[]};\r\n        tmpNewData.push(newSemester);\r\n        setNewData(tmpNewData);\r\n    };\r\n\r\n    const clearAllSemester=()=>{\r\n        const newData1 = [{rowData:[]}];\r\n        setNewData(newData1);\r\n    };\r\n\r\n\r\n    const saveData =() =>{\r\n        const Jsondata = JSON.stringify(newData);\r\n        localStorage.setItem(\"savedData\", Jsondata);\r\n        console.log(localStorage.getItem(\"savedData\"));\r\n    };\r\n\r\n    const loadData =() =>{\r\n        const loadData= localStorage.getItem(\"savedData\");\r\n        const JsonData = JSON.parse(loadData||\"{}\");\r\n        setNewData(JsonData);\r\n        // console.log(newData);\r\n    };\r\n\r\n    const clearAllCourse = (index:number)=>{\r\n        const tmpNewData = JSON.parse(JSON.stringify(newData));\r\n        tmpNewData[index].rowData = [];\r\n        setNewData(tmpNewData);\r\n    };\r\n    \r\n    const [show1, setShow1] = useState(true);\r\n\r\n    let nowDragData:Element;\r\n    let DropObjIndex = -1;\r\n    let flag = false;\r\n    \r\n    const DragStarted = (e: DragStartedEvent) => {\r\n        if(e.target) {\r\n            const target = e.target as never;\r\n            nowDragData = target[\"__agComponent\"][\"rowNode\"][\"data\"];\r\n        }\r\n        flag = true;\r\n    };\r\n    \r\n    const [gridApi, setGridApi] = useState([]);\r\n    \r\n    const onGridReady = (params: GridReadyEvent, index: number) => {\r\n        // console.log(params,index, 9999);\r\n        const arr = [...gridApi];\r\n        arr[index] = params.api as never;\r\n        setGridApi(arr);\r\n    };\r\n    \r\n    const onBtnExport = (index: number) => {\r\n        const api = gridApi[index] as GridApi;\r\n        api.exportDataAsCsv();\r\n    };\r\n\r\n    const importData = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // console.log(e.target.files);\r\n        if(e.target.files) {\r\n            const file = e.target.files[0];\r\n            e.target.value = \"\";\r\n            if (file) {\r\n                const fr = new FileReader();\r\n                fr.readAsBinaryString(file);\r\n                fr.onload = (e: ProgressEvent<FileReader>) => {\r\n                    // if(e.target) console.log(e.target[\"result\"]);\r\n                    if(e.target && e.target.result){\r\n                        const result = e.target.result;\r\n                        Papa.parse(result as string, {\r\n                            encoding: \"UTF-8\",\r\n                            complete: ({data}) => {\r\n                                const arr = newData;\r\n                                const rowData = [];\r\n                                for(let i = 1 ; i < data.length ; i++) {\r\n                                    const data2 = data[i] as never;\r\n                                    const obj2 = {\r\n                                        id: data2[0],\r\n                                        Course: data2[1],\r\n                                        Credit: data2[2],\r\n                                        Name: data2[3],\r\n                                        Plan: data2[4],\r\n                                        DegreeRequire: data2[5],\r\n                                        Presuit: data2[6]\r\n                                    };\r\n                                    rowData.push(obj2);\r\n                                    \r\n                                }\r\n                                arr.push({\r\n                                    rowData\r\n                                });\r\n                                setNewData(JSON.parse(JSON.stringify(arr)));\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n   \r\n    return (\r\n        <div className=\"app-box\" >\r\n            <h1 style = {{textAlign:\"center\"}}>Plan Course Of Semester</h1>\r\n            <button onClick={()=>setshow(true)} style={{marginLeft:350}}>Make a plan</button>\r\n            {\r\n                show?\r\n                    <div className=\"flex\">\r\n                        <div>\r\n                            {\r\n                                courses.map((value,index) => \r\n                                    <div key = {index} className=\"my-table\" data-key={-2}>\r\n                                        \r\n                                        <div  className=\"ag-theme-alpine\"  style={{height: 400, width: 350}}>\r\n                                            {/*<button onClick={() => onBtnExport(index)}>\r\n                                                export pool of courses\r\n                                            </button>*/}\r\n                                            <AgGridReact onDragStarted={DragStarted} suppressExcelExport={true}  onGridReady={(e)=>{\r\n                                                onGridReady(e, index);\r\n                                            }} rowData={value.rowData} columnDefs={columns2} rowDragManaged={true} animateRows={true} suppressMoveWhenRowDragging={true} />\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    \r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <div>total credit: {totalCredit}</div>\r\n                            {\r\n                                DegreeRequires.map((item, index) =>\r\n                                    <div key={index}>\r\n                                        <div>{item.name}: {item.nowValue}/{item.value}</div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                newData.map((value,index) => \r\n                                    <div key = {index} className=\"my-table\" data-key={index}>\r\n                                        \r\n                                        <div  className=\"ag-theme-alpine\"  style={{height: 400, width: 1400, marginLeft:10}}>\r\n                                            <button onClick={() => onBtnExport(index)}>\r\n                                                export CSV file\r\n                                            </button>\r\n                                            <AgGridReact onDragStarted={DragStarted} suppressExcelExport={true} onGridReady={(e)=>{\r\n                                                onGridReady(e, index);\r\n                                            }} rowData={value.rowData} columnDefs={columns} rowDragManaged={true} animateRows={true} suppressMoveWhenRowDragging={true} />\r\n                                            \r\n                                        </div>\r\n                                        <br />\r\n                                        <button onClick = {()=>addArow(index)} style={{marginLeft:350}}>AddCourse</button>\r\n                                        <button onClick={()=>clearAllCourse(index)}>clear All Course</button>\r\n                                    </div>\r\n                \r\n                                    \r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            \r\n                    :null\r\n\r\n            }\r\n            {\r\n                show?<button onClick={()=>addAsemester()} style={{marginLeft:350}}>Add a Semester</button>:null\r\n            }\r\n            {\r\n                show?<button onClick ={()=>saveData()} style={{marginLeft:350}}>Save</button>:null\r\n            }\r\n            {\r\n                show?<button onClick ={()=>loadData()} style={{marginLeft:350}}>Load</button>:null\r\n            }\r\n            {\r\n                show?<button onClick={()=>clearAllSemester()} style={{marginLeft:350}}>Clear All Semester</button>:null\r\n            }\r\n            {\r\n                show?<button className=\"file\" style={{marginLeft:350}}><input type=\"file\" accept=\".csv\" onChange={importData} />import CSV file</button>: null\r\n            }\r\n            <>\r\n                <Alert show={show1} variant=\"success\">\r\n                    <Alert.Heading>Hello There!</Alert.Heading>\r\n                    <p>\r\n                        Thank you for using our website. The site automatically stores specialized courses in computer science. You can use it directly. Other school courses need to be edited and added by users.\r\n                        But you can save your lessons for next time. Below is a 4-year graduation plan template for your reference.\r\n                    </p>\r\n                    <a href=\"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf\" >CISC Major Plan 0</a>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button onClick={() => setShow1(false)} variant=\"outline-success\">\r\n                            Got!\r\n                        </Button>\r\n                    </div>\r\n                </Alert>\r\n                {!show && <Button onClick={() => setShow1(true)}>Guide</Button>}\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}